#!/usr/bin/env node

'use strict'

const argv = require('minimist')(process.argv.slice(2));
const colors = require('colors');
const _ = require('lodash');
const caseStatus = require('../lib/case-status');
const pkg = require('../package');

console.log(`${pkg.name} v${pkg.version}\n`);

const receipt = argv.c;
const length = parseInt(argv.l);
const receiptNum = parseInt(receipt.substring(3));
const receipts = _.range(receiptNum, receiptNum + length).map(r => receipt.substr(0, 3) + r);

Promise
  .all(receipts.map(c => (
    caseStatus(c).catch((err) => err)
  )))
  .then(statusList => {
    statusList.forEach((status, i) => {
      console.log(receipts[i].green)

      if (!(status instanceof Error)) {
        console.log('=> ' + status.title.blue.bold)
        console.log(`=> ${status.details}`)
      } else {
        console.log(`Error: ${status.message}`.red)
      }

      if (i !== statusList.length - 1) {
        console.log()
      }
    })
  })
  .catch(err => console.log(err.message.red))

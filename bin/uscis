#!/usr/bin/env node

'use strict'

var argv = require('minimist')(process.argv.slice(2), {'--': true});
var colors = require('colors');
var _ = require('lodash');
var uscis = require('../lib/uscis');
var pkg = require('../package');
var fs = require('fs');
var util = require('util');

const now = new Date();

if (argv.a) {
  let files = argv['--'];
  uscis.analyze(files)
  .then((data) => {
    if (argv.o) {
      let date = now.toISOString().replace(/[\-T:.]/g, '_').replace(/[Z]/g, '');
      let filename = util.format('analyze_%s.txt', date);
      fs.writeFileSync(filename, JSON.stringify(data, null, 2));
    }
    console.log(data);
  });
  return;
}

const receipt = argv.r;
const length = parseInt(argv.l);
const receiptNum = parseInt(receipt.substring(3));
const receipts = _.range(receiptNum, receiptNum + length).map(r => receipt.substr(0, 3) + r);

console.log(now.toISOString());
console.log()

Promise
  .all(receipts.map(c => (
    uscis.caseStatus(c).catch((err) => err)
  )))
  .then((statusList) => {
    if (argv.o) {
      let date = now.toISOString().replace(/[\-T:.]/g, '_').replace(/[Z]/g, '');
      let filename = util.format('%s_%s_%s.txt', receipt, length, date);
      let filter = _.filter(statusList, (i) => !(i instanceof Error));
      let data = {receipt: receipt, length: length, date: now, data: filter};
      console.log('Output to file ' + filename);
      console.log()
      fs.writeFileSync(filename, JSON.stringify(data, null, 2));
    }
    return statusList;
  })
  .then(statusList => {
    statusList.forEach((status, i) => {
      
      if (!(status instanceof Error)) {
        console.log(status.receipt.green);
        let formMatch = status.content.match(/Form \w-\w+/);
        if (formMatch) {
          console.log(formMatch[0].yellow);
        }
        console.log('=> ' + status.title.blue.bold);
        console.log(`=> ${status.content}`);
      } else {
        console.log(receipts[i].green)
        console.log(`Error: ${status.message}`.red);
      }
      console.log();
    })
  })
  .catch(err => console.log(err.message.red));
